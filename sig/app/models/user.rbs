class User < ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[User, User::ActiveRecord_Relation]

  attr_accessor id (): Integer
  def id_changed?: () -> bool
  def id_change: () -> [Integer?, Integer?]
  def id_will_change!: () -> void
  def id_was: () -> Integer?
  def id_previously_changed?: () -> bool
  def id_previous_change: () -> Array[Integer?]?
  def id_previously_was: () -> Integer?
  def restore_id!: () -> void
  def clear_id_change: () -> void

  attr_accessor name (): String?
  def name_changed?: () -> bool
  def name_change: () -> [String?, String?]
  def name_will_change!: () -> void
  def name_was: () -> String?
  def name_previously_changed?: () -> bool
  def name_previous_change: () -> Array[String?]?
  def name_previously_was: () -> String?
  def restore_name!: () -> void
  def clear_name_change: () -> void

  attr_accessor email (): String?
  def email_changed?: () -> bool
  def email_change: () -> [String?, String?]
  def email_will_change!: () -> void
  def email_was: () -> String?
  def email_previously_changed?: () -> bool
  def email_previous_change: () -> Array[String?]?
  def email_previously_was: () -> String?
  def restore_email!: () -> void
  def clear_email_change: () -> void

  attr_accessor male (): Integer?
  def male_changed?: () -> bool
  def male_change: () -> [Integer?, Integer?]
  def male_will_change!: () -> void
  def male_was: () -> Integer?
  def male_previously_changed?: () -> bool
  def male_previous_change: () -> Array[Integer?]?
  def male_previously_was: () -> Integer?
  def restore_male!: () -> void
  def clear_male_change: () -> void

  attr_accessor block (): (TrueClass | FalseClass)?
  def block_changed?: () -> bool
  def block_change: () -> [(TrueClass | FalseClass)?, (TrueClass | FalseClass)?]
  def block_will_change!: () -> void
  def block_was: () -> (TrueClass | FalseClass)?
  def block_previously_changed?: () -> bool
  def block_previous_change: () -> Array[(TrueClass | FalseClass)?]?
  def block_previously_was: () -> (TrueClass | FalseClass)?
  def restore_block!: () -> void
  def clear_block_change: () -> void
  attr_accessor block? (): TrueClass | FalseClass

  attr_accessor created_at (): Time
  def created_at_changed?: () -> bool
  def created_at_change: () -> [Time?, Time?]
  def created_at_will_change!: () -> void
  def created_at_was: () -> Time?
  def created_at_previously_changed?: () -> bool
  def created_at_previous_change: () -> Array[Time?]?
  def created_at_previously_was: () -> Time?
  def restore_created_at!: () -> void
  def clear_created_at_change: () -> void

  attr_accessor updated_at (): Time
  def updated_at_changed?: () -> bool
  def updated_at_change: () -> [Time?, Time?]
  def updated_at_will_change!: () -> void
  def updated_at_was: () -> Time?
  def updated_at_previously_changed?: () -> bool
  def updated_at_previous_change: () -> Array[Time?]?
  def updated_at_previously_was: () -> Time?
  def restore_updated_at!: () -> void
  def clear_updated_at_change: () -> void







end

class User::ActiveRecord_Relation < ActiveRecord::Relation
  include _ActiveRecord_Relation[User]
  include Enumerable[User]


end

class User::ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
end
